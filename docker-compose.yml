services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hotelreservation_root_password
      MYSQL_DATABASE: hotel_reservation
      MYSQL_USER: hotel_user
      MYSQL_PASSWORD: hotel_password
    networks:
      - hotel-network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=local
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=hotel_reservation
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_password
    restart: unless-stopped
    networks:
      - hotel-network
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    working_dir: /app
    command: npm run dev
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=local
      - BACKEND_URL=http://backend:3001
    restart: unless-stopped
    networks:
      - hotel-network
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    working_dir: /app
    command: npm run dev

networks:
  hotel-network:
    driver: bridge

volumes:
  backend_node_modules:
  frontend_node_modules:
  mysql_data:
